basePath: /api/v1/
definitions:
  models.Group:
    properties:
      children:
        items:
          type: string
        type: array
      hosts:
        items:
          $ref: '#/definitions/models.Host'
        type: array
      name:
        type: string
      vars:
        additionalProperties: true
        type: object
    type: object
  models.Host:
    properties:
      connection:
        type: string
      ip:
        type: string
      name:
        type: string
      password:
        type: string
      port:
        type: integer
      user:
        type: string
      vars:
        additionalProperties: true
        type: object
    type: object
  models.ImRunAdhocRequest:
    properties:
      arg:
        type: string
      inventory:
        $ref: '#/definitions/models.Inventory'
        type: object
      module:
        type: string
      pattern:
        type: string
    type: object
  models.Inventory:
    properties:
      groups:
        items:
          $ref: '#/definitions/models.Group'
        type: array
      hosts:
        items:
          $ref: '#/definitions/models.Host'
        type: array
    type: object
  models.Playbook:
    properties:
      dir:
        type: string
      name:
        type: string
    type: object
  models.Result:
    properties:
      content:
        type: string
      end_time:
        type: string
      logfile:
        type: string
      message:
        type: string
      start_time:
        type: string
      stdout:
        type: string
      success:
        type: boolean
    type: object
  models.RunPlaybookRequest:
    properties:
      dir:
        type: string
      inventory:
        type: string
      playbook:
        type: string
    type: object
  models.Task:
    properties:
      args:
        additionalProperties:
          type: string
        type: object
      created_time:
        type: string
      finished:
        type: boolean
      inventory:
        $ref: '#/definitions/models.Inventory'
        type: object
      state:
        type: string
      type:
        type: string
      uid:
        type: string
    type: object
info:
  contact: {}
  description: This is RestAPI Client for ansible
  license: {}
  title: Kobe Restful API
  version: 0.0.1
paths:
  /playbooks/:
    get:
      description: List all playbooks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Playbook'
            type: array
      summary: List playbooks
      tags:
      - playbook
  /playbooks/{dir}:
    get:
      description: List all playbooks under dir
      parameters:
      - description: dir
        in: path
        name: dir
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Playbook'
            type: array
      summary: List playbooks under dir
      tags:
      - playbook
  /result/{uid}:
    get:
      description: Get task result by task id when task finished
      parameters:
      - description: task_uid
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Result'
      summary: Get Task Result
      tags:
      - result
  /runner/im/adhoc/:
    post:
      consumes:
      - application/json
      description: Run Adhoc Task with Inventory Object
      parameters:
      - description: request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.ImRunAdhocRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Task'
      summary: ImRunAdhoc
      tags:
      - runner
  /runner/im/playbook/:
    post:
      consumes:
      - application/json
      description: Create Run Playbook Task with Inventory Object
      parameters:
      - description: request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RunPlaybookRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Task'
      summary: ImRunPlaybook
      tags:
      - runner
  /tasks/:
    get:
      description: List task info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Task'
      summary: List Task Info
      tags:
      - task
  /tasks/{uid}:
    get:
      description: Get task info
      parameters:
      - description: task_uid
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Task'
      summary: Get Task Info
      tags:
      - task
swagger: "2.0"
